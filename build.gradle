buildscript {
	ext.kotlin_version = '1.4.21'
}

plugins {
    // install Kotlin JVM gradle plugin
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
    // install code linter
    id("io.gitlab.arturbosch.detekt").version("1.15.0")
}
 
repositories {
    mavenCentral()
    jcenter()
    google()
}

dependencies {    
    
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.4.21'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: '1.4.21'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit5', version: '1.4.21'

    // include JUnit 5 assertions
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'

    // include JUnit 5 test engine
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'

    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.1.9'

    // Logger
    implementation 'org.slf4j:slf4j-api:1.7.30'

}

sourceSets {
    main.kotlin.srcDirs += "src/main"
    test.java.srcDirs += "src/test"
    test.kotlin.srcDirs += "src/test"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = '1.8'
        apiVersion = '1.4'
        languageVersion = '1.4'
    }
}

test {
    useJUnitPlatform()

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    testLogging {
        events "PASSED", "FAILED", "SKIPPED", "STANDARD_OUT", "STANDARD_ERROR"
    }
}
